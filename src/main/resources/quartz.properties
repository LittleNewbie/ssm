# Default Properties file for use by StdSchedulerFactory
# to create a Quartz Scheduler Instance, if a different
# properties file is not explicitly specified.
#

org.quartz.scheduler.instanceName: DefaultQuartzScheduler
org.quartz.scheduler.rmi.export: false
org.quartz.scheduler.rmi.proxy: false
org.quartz.scheduler.wrapJobExecutionInUserTransaction: false

org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount: 10
org.quartz.threadPool.threadPriority: 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true
# Configure JobStore 存储调度信息（工作，触发器和日历等）  
# ===========================================================================  
# 信息保存时间 默认值60秒  
org.quartz.jobStore.misfireThreshold: 60000
# 保存job和Trigger的状态信息到内存中的类  
org.quartz.jobStore.class: org.quartz.simpl.RAMJobStore

# ===========================================================================    
# Configure SchedulerPlugins 插件属性 配置  
# ===========================================================================  
# trigger执行历史日志（可以看到类的文档和参数列表）  
org.quartz.plugin.triggHistory.class = org.quartz.plugins.history.LoggingTriggerHistoryPlugin    
org.quartz.plugin.triggHistory.triggerFiredMessage = Trigger {1}.{0} fired job {6}.{5} at: {4, date, HH:mm:ss MM/dd/yyyy}    
org.quartz.plugin.triggHistory.triggerCompleteMessage = Trigger {1}.{0} completed firing job {6}.{5} at {4, date, HH:mm:ss MM/dd/yyyy} with resulting trigger instruction code: {9}    
# job调度插件  quartz_jobs(jobs and triggers内容)的XML文档    
# Job 和 Trigger 信息的类  JobInitializationPluginMultiple
org.quartz.plugin.jobInitializer.class = org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin  
# 指定存放调度器(Job 和 Trigger)信息的xml文件，默认是classpath下quartz_jobs.xml  
org.quartz.plugin.jobInitializer.fileNames = classpath:quartz_jobs.xml    
#org.quartz.plugin.jobInitializer.overWriteExistingJobs = true    
org.quartz.plugin.jobInitializer.failOnFileNotFound = true    
# 自动扫描任务单并发现改动的时间间隔,单位为秒  
org.quartz.plugin.jobInitializer.scanInterval = 10  
# 覆盖任务调度器中同名的jobDetail,避免只修改了CronExpression所造成的不能重新生效情况  
org.quartz.plugin.jobInitializer.wrapInUserTransaction = false 